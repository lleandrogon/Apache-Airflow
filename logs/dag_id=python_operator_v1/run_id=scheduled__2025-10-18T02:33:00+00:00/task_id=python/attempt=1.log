{"timestamp":"2025-10-18T02:33:02.254892Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-18T02:33:02.255674Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v1.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-18T02:33:02.287889Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.288010Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.288078Z","level":"info","event":"Current task name:python","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.288105Z","level":"info","event":"Dag name:python_operator_v1","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.289958Z","level":"info","event":"andre","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290677Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290711Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290757Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:33:00+00:00', logical_date=datetime.datetime(2025, 10, 18, 2, 33, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2025, 10, 18, 2, 33, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2025, 10, 18, 2, 33, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2025, 10, 18, 2, 33, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 10, 18, 2, 33, 1, 15641, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, state=<DagRunState.RUNNING: 'running'>, conf={}, consumed_asset_events=[]),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290784Z","level":"info","event":" 'data_interval_end': DateTime(2025, 10, 18, 2, 33, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290804Z","level":"info","event":" 'data_interval_start': DateTime(2025, 10, 18, 2, 33, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290825Z","level":"info","event":" 'ds': '2025-10-18',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290847Z","level":"info","event":" 'ds_nodash': '20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290867Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290887Z","level":"info","event":" 'inlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290907Z","level":"info","event":" 'logical_date': DateTime(2025, 10, 18, 2, 33, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290927Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290944Z","level":"info","event":" 'map_index_template': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290961Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x716c84acb890>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290979Z","level":"info","event":" 'outlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.290996Z","level":"info","event":" 'params': {},","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.303829Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x716c7298f480 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b78680>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.303974Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x716c7298f3c0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6b420>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304016Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x716c72b6fa40 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6afc0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304039Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x716c72b22440 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6a980>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304058Z","level":"info","event":" 'run_id': 'scheduled__2025-10-18T02:33:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304078Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304134Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('0199f529-cb52-75b8-9928-a995f619ce00'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:33:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 33, 1, 844705, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304162Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304182Z","level":"info","event":" 'task_reschedule_count': 0,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304201Z","level":"info","event":" 'templates_dict': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304221Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('0199f529-cb52-75b8-9928-a995f619ce00'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:33:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 33, 1, 844705, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304241Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304260Z","level":"info","event":" 'ts': '2025-10-18T02:33:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304278Z","level":"info","event":" 'ts_nodash': '20251018T023300',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304296Z","level":"info","event":" 'ts_nodash_with_tz': '20251018T023300+0000',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304315Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304335Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.304355Z","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-18T02:33:02.304687Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199f529-cb52-75b8-9928-a995f619ce00'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:33:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 33, 1, 844705, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-18T02:33:02.332775Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.332925Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:33:02.333042Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","logger":"task.stdout"}
