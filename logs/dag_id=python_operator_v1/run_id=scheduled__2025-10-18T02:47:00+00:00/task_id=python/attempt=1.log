{"timestamp":"2025-10-18T02:47:01.442275Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-18T02:47:01.442785Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v1.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-18T02:47:01.471893Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.472019Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.472225Z","level":"info","event":"Current task name:python","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.472318Z","level":"info","event":"Dag name:python_operator_v1","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.473835Z","level":"info","event":"andre","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474477Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474564Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474609Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:47:00+00:00', logical_date=datetime.datetime(2025, 10, 18, 2, 47, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2025, 10, 18, 2, 47, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2025, 10, 18, 2, 47, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2025, 10, 18, 2, 47, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 10, 18, 2, 47, 0, 247963, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, state=<DagRunState.RUNNING: 'running'>, conf={}, consumed_asset_events=[]),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474637Z","level":"info","event":" 'data_interval_end': DateTime(2025, 10, 18, 2, 47, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474659Z","level":"info","event":" 'data_interval_start': DateTime(2025, 10, 18, 2, 47, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474715Z","level":"info","event":" 'ds': '2025-10-18',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474765Z","level":"info","event":" 'ds_nodash': '20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474800Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474832Z","level":"info","event":" 'inlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474856Z","level":"info","event":" 'logical_date': DateTime(2025, 10, 18, 2, 47, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474876Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474896Z","level":"info","event":" 'map_index_template': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474914Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x716c8c6828a0>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474938Z","level":"info","event":" 'outlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.474957Z","level":"info","event":" 'params': {},","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483163Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x716c72b6c580 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b64cc0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483295Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x716c72b6c4c0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b574c0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483349Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x716c72b2de40 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b57a60>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483376Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x716c72b5c100 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b572e0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483400Z","level":"info","event":" 'run_id': 'scheduled__2025-10-18T02:47:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483421Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483485Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('0199f536-998a-783e-a1e2-468bea5c8709'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:47:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 47, 1, 75701, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483511Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483533Z","level":"info","event":" 'task_reschedule_count': 0,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483554Z","level":"info","event":" 'templates_dict': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483579Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('0199f536-998a-783e-a1e2-468bea5c8709'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:47:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 47, 1, 75701, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483601Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483620Z","level":"info","event":" 'ts': '2025-10-18T02:47:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483639Z","level":"info","event":" 'ts_nodash': '20251018T024700',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483658Z","level":"info","event":" 'ts_nodash_with_tz': '20251018T024700+0000',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483677Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483696Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.483622Z","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-18T02:47:01.483804Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199f536-998a-783e-a1e2-468bea5c8709'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:47:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 47, 1, 75701, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-18T02:47:01.508399Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.508525Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:47:01.508603Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","logger":"task.stdout"}
