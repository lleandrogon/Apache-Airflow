{"timestamp":"2025-10-18T02:35:02.037449Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-18T02:35:02.037934Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v1.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-18T02:35:02.066574Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.066716Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.066761Z","level":"info","event":"Current task name:python","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.066785Z","level":"info","event":"Dag name:python_operator_v1","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067389Z","level":"info","event":"andre","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067703Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067781Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067852Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:35:00+00:00', logical_date=datetime.datetime(2025, 10, 18, 2, 35, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2025, 10, 18, 2, 35, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2025, 10, 18, 2, 35, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2025, 10, 18, 2, 35, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 10, 18, 2, 35, 0, 850121, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, state=<DagRunState.RUNNING: 'running'>, conf={}, consumed_asset_events=[]),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067884Z","level":"info","event":" 'data_interval_end': DateTime(2025, 10, 18, 2, 35, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067907Z","level":"info","event":" 'data_interval_start': DateTime(2025, 10, 18, 2, 35, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067928Z","level":"info","event":" 'ds': '2025-10-18',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067953Z","level":"info","event":" 'ds_nodash': '20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067973Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.067995Z","level":"info","event":" 'inlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.068015Z","level":"info","event":" 'logical_date': DateTime(2025, 10, 18, 2, 35, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.068035Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.068054Z","level":"info","event":" 'map_index_template': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.068074Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x716c84aae7b0>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.068094Z","level":"info","event":" 'outlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.068114Z","level":"info","event":" 'params': {},","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.076979Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x716c72994700 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b79120>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077124Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x716c729945c0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6bec0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077231Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x716c72b42680 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6ba60>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077285Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x716c72b41100 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6b740>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077323Z","level":"info","event":" 'run_id': 'scheduled__2025-10-18T02:35:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077350Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077373Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('0199f52b-9f6d-717f-af4f-7b526a0c3643'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:35:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 35, 1, 701951, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077397Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077417Z","level":"info","event":" 'task_reschedule_count': 0,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077437Z","level":"info","event":" 'templates_dict': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077456Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('0199f52b-9f6d-717f-af4f-7b526a0c3643'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:35:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 35, 1, 701951, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077478Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077497Z","level":"info","event":" 'ts': '2025-10-18T02:35:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077517Z","level":"info","event":" 'ts_nodash': '20251018T023500',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077536Z","level":"info","event":" 'ts_nodash_with_tz': '20251018T023500+0000',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077576Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077599Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.077711Z","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-18T02:35:02.078001Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199f52b-9f6d-717f-af4f-7b526a0c3643'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2025-10-18T02:35:00+00:00', try_number=1, dag_version_id=UUID('0199f51d-f58d-7d44-9eec-7e8621103e49'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 35, 1, 701951, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-18T02:35:02.098937Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.099070Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:35:02.099152Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","logger":"task.stdout"}
