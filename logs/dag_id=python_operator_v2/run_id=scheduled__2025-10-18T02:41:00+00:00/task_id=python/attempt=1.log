{"timestamp":"2025-10-18T02:43:01.345767Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-18T02:43:01.346605Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v2.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-18T02:43:01.374182Z","level":"warning","event":"The `airflow.decorators.task` attribute is deprecated. Please use `'airflow.sdk.task'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/python_operator_v2.py","lineno":3,"logger":"py.warnings"}
{"timestamp":"2025-10-18T02:43:01.403973Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.404179Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.404465Z","level":"info","event":"Current task name:python","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.404703Z","level":"info","event":"Dag name:python_operator_v2","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.408713Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.408873Z","level":"info","event":" 'dag': <DAG: python_operator_v2>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.408979Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:41:00+00:00', logical_date=datetime.datetime(2025, 10, 18, 2, 41, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2025, 10, 18, 2, 41, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2025, 10, 18, 2, 41, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2025, 10, 18, 2, 41, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 10, 18, 2, 43, 0, 403041, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, state=<DagRunState.RUNNING: 'running'>, conf={}, consumed_asset_events=[]),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409036Z","level":"info","event":" 'data_interval_end': DateTime(2025, 10, 18, 2, 41, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409089Z","level":"info","event":" 'data_interval_start': DateTime(2025, 10, 18, 2, 41, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409148Z","level":"info","event":" 'ds_nodash': '20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409180Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409213Z","level":"info","event":" 'inlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409248Z","level":"info","event":" 'logical_date': DateTime(2025, 10, 18, 2, 41, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409316Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409365Z","level":"info","event":" 'map_index_template': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409399Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x716c767bb950>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409431Z","level":"info","event":" 'outlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.409457Z","level":"info","event":" 'params': {},","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.425688Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x716c72998cc0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b5a660>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.425899Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x716c72b21dc0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b5b240>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426003Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x716c72b5dc00 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b425c0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426042Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x716c72b5e740 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b423e0>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426067Z","level":"info","event":" 'run_id': 'scheduled__2025-10-18T02:41:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426152Z","level":"info","event":" 'task': <Task(_PythonDecoratedOperator): python>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426191Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('0199f532-f0a8-7f0a-a4ef-147670f39113'), task_id='python', dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:41:00+00:00', try_number=1, dag_version_id=UUID('0199f531-30ae-7b1b-bde0-cf9d26b1f1cd'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(_PythonDecoratedOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 43, 0, 816802, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426226Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v2__python__20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426253Z","level":"info","event":" 'task_reschedule_count': 0,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426275Z","level":"info","event":" 'templates_dict': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426306Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('0199f532-f0a8-7f0a-a4ef-147670f39113'), task_id='python', dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:41:00+00:00', try_number=1, dag_version_id=UUID('0199f531-30ae-7b1b-bde0-cf9d26b1f1cd'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(_PythonDecoratedOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 43, 0, 816802, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426338Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426360Z","level":"info","event":" 'ts': '2025-10-18T02:41:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426380Z","level":"info","event":" 'ts_nodash': '20251018T024100',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426410Z","level":"info","event":" 'ts_nodash_with_tz': '20251018T024100+0000',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426453Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426505Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.426553Z","level":"info","event":"2025-10-18","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.425910Z","level":"info","event":"Done. Returned value was: meu retorno agora Ã© este texto","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-18T02:43:01.426471Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199f532-f0a8-7f0a-a4ef-147670f39113'), task_id='python', dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:41:00+00:00', try_number=1, dag_version_id=UUID('0199f531-30ae-7b1b-bde0-cf9d26b1f1cd'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(_PythonDecoratedOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 43, 0, 816802, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-18T02:43:01.464825Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.464972Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:43:01.465071Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): python>","logger":"task.stdout"}
