{"timestamp":"2025-10-18T02:46:01.449003Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-18T02:46:01.449501Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v2.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-18T02:46:01.466730Z","level":"warning","event":"The `airflow.decorators.task` attribute is deprecated. Please use `'airflow.sdk.task'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/python_operator_v2.py","lineno":3,"logger":"py.warnings"}
{"timestamp":"2025-10-18T02:46:01.485952Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.486173Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.486317Z","level":"info","event":"Current task name:python","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.486453Z","level":"info","event":"Dag name:python_operator_v2","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488151Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488349Z","level":"info","event":" 'dag': <DAG: python_operator_v2>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488504Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:46:00+00:00', logical_date=datetime.datetime(2025, 10, 18, 2, 46, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2025, 10, 18, 2, 46, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2025, 10, 18, 2, 46, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2025, 10, 18, 2, 46, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 10, 18, 2, 46, 0, 247520, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, state=<DagRunState.RUNNING: 'running'>, conf={}, consumed_asset_events=[]),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488590Z","level":"info","event":" 'data_interval_end': DateTime(2025, 10, 18, 2, 46, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488664Z","level":"info","event":" 'data_interval_start': DateTime(2025, 10, 18, 2, 46, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488712Z","level":"info","event":" 'ds_nodash': '20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488741Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488773Z","level":"info","event":" 'inlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488800Z","level":"info","event":" 'logical_date': DateTime(2025, 10, 18, 2, 46, 0, tzinfo=Timezone('UTC')),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488823Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488849Z","level":"info","event":" 'map_index_template': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488870Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x716c851ce540>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488892Z","level":"info","event":" 'outlets': [],","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.488913Z","level":"info","event":" 'params': {},","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501023Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x716c729c1cc0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c729a0900>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501228Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x716c729c1b80 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b7fd80>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501278Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x716c7298a200 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b7fe20>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501308Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x716c955fb4c0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x716c72b6fa60>>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501330Z","level":"info","event":" 'run_id': 'scheduled__2025-10-18T02:46:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501385Z","level":"info","event":" 'task': <Task(_PythonDecoratedOperator): python>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501441Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('0199f535-af30-732e-9fe9-362fbb752a35'), task_id='python', dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:46:00+00:00', try_number=1, dag_version_id=UUID('0199f531-30ae-7b1b-bde0-cf9d26b1f1cd'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(_PythonDecoratedOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 46, 1, 94043, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501471Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v2__python__20251018',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501498Z","level":"info","event":" 'task_reschedule_count': 0,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501521Z","level":"info","event":" 'templates_dict': None,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501548Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('0199f535-af30-732e-9fe9-362fbb752a35'), task_id='python', dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:46:00+00:00', try_number=1, dag_version_id=UUID('0199f531-30ae-7b1b-bde0-cf9d26b1f1cd'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(_PythonDecoratedOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 46, 1, 94043, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501572Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501592Z","level":"info","event":" 'ts': '2025-10-18T02:46:00+00:00',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501613Z","level":"info","event":" 'ts_nodash': '20251018T024600',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501633Z","level":"info","event":" 'ts_nodash_with_tz': '20251018T024600+0000',","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501652Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501673Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501695Z","level":"info","event":"2025-10-18","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.501260Z","level":"info","event":"Done. Returned value was: meu retorno agora Ã© este texto","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-18T02:46:01.501609Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199f535-af30-732e-9fe9-362fbb752a35'), task_id='python', dag_id='python_operator_v2', run_id='scheduled__2025-10-18T02:46:00+00:00', try_number=1, dag_version_id=UUID('0199f531-30ae-7b1b-bde0-cf9d26b1f1cd'), map_index=-1, hostname='d3ad80844e63', context_carrier={}, task=<Task(_PythonDecoratedOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 18, 2, 46, 1, 94043, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-18T02:46:01.530210Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.530334Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-18T02:46:01.530407Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): python>","logger":"task.stdout"}
